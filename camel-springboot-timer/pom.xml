<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <artifactId>camel-springboot-timer</artifactId>
    <groupId>com.omarsmak.camel.examples</groupId>
    <version>1.0-SNAPSHOT</version>

    <name>Camel Examples :: Camel SpringBoot Timer</name>
    <description>An example for timer using Camel SpringBoot</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <target.main.class>com.omarsmak.camel.examples.camel.springboot.timer.CamelApplication</target.main.class>
        <start-class>${target.main.class}</start-class>

        <jdk.version>1.8</jdk.version>
        <camel.version>3.7.0</camel.version>
        <maven-compiler-plugin-version>3.8.1</maven-compiler-plugin-version>
        <maven-surefire-plugin-version>3.0.0-M4</maven-surefire-plugin-version>
        <maven-jar-plugin-version>3.0.2</maven-jar-plugin-version>
        <maven-exec-maven-plugin-version>3.0.0</maven-exec-maven-plugin-version>
        <log4j2-version>2.13.3</log4j2-version>
        <spring-boot-version>2.3.3.RELEASE</spring-boot-version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Camel BOM -->
            <dependency>
                <groupId>org.apache.camel.springboot</groupId>
                <artifactId>camel-spring-boot-dependencies</artifactId>
                <version>${camel.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>


    <dependencies>

        <!-- camel -->
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-endpointdsl</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-timer-starter</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin-version}</version>
                <configuration>
                    <source>${jdk.version}</source>
                    <target>${jdk.version}</target>
                    <maxmem>512M</maxmem>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin-version}</version>
            </plugin>
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven-jar-plugin-version}</version>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot-version}</version>
                <configuration>
                    <mainClass>${target.main.class}</mainClass>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Allows the example to be run via 'mvn compile exec:java' -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <!-- Allows the example to be run via 'mvn compile exec:java' -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>${maven-exec-maven-plugin-version}</version>
                    <configuration>
                        <mainClass>${target.main.class}</mainClass>
                        <includePluginDependencies>false</includePluginDependencies>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
